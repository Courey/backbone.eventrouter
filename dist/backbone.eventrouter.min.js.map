/**
 * backbone.eventrouter - A highly opinionated, simplistic Backbone.Router coupled with a Backbone.Radio.Channel
 * @version v0.1.0
 * @link https://github.com/RoundingWellOS/backbone.eventrouter
 * @license MIT
 */
{"version":3,"sources":["/source/backbone.eventrouter.js"],"names":["global","factory","exports","module","require","define","amd","Backbone","EventRouter","_","Radio","this","Router","extend","constructor","options","apply","arguments","pick","_ch","channel","result","_initRoutes","listenTo","navigateFromEvent","channelName","getChannel","_routeTriggers","each","_addTriggerRoute","routes","event","isArray","route","bind","trigger","addTriggerRoute","_route","name","callback","isFunction","wrappedCallback","args","Array","prototype","slice","call","concat","_storeRouteTrigger","_clearRouteTrigger","_routeArgs","push","_getCurrentRouteTrigger","last","pop","_isTriggeredFromRoute","currentRoute","length","union","getDefaultRoute","eventArgs","rest","translatedRoute","translateRoute","navigate","_replaceParam","arg","namedParam","replace","reduce","backbone_eventrouter"],"mappings":"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","file":"backbone.eventrouter.min.js","sourcesContent":["/**\n * backbone.eventrouter - A highly opinionated, simplistic Backbone.Router coupled with a Backbone.Radio.Channel\n * @version v0.1.0\n * @link https://github.com/RoundingWellOS/backbone.eventrouter\n * @license MIT\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('underscore'), require('backbone'), require('backbone.radio')) :\n  typeof define === 'function' && define.amd ? define(['underscore', 'backbone', 'backbone.radio'], factory) :\n  global.Backbone.EventRouter = factory(global._, global.Backbone, global.Radio)\n}(this, function (_, Backbone, Radio) { 'use strict';\n\n  var EventRouter = Backbone.EventRouter = Backbone.Router.extend({\n    constructor: function(options) {\n      options = _.extend({}, options);\n\n      Backbone.Router.apply(this, arguments);\n\n      _.extend(this, _.pick(options, ['channelName', 'routeTriggers']));\n\n      this._ch = Backbone.Radio.channel(_.result(this, 'channelName'));\n\n      this._initRoutes();\n\n      this.listenTo(this._ch, 'all', this.navigateFromEvent);\n    },\n\n    channelName: 'event-router',\n\n    getChannel: function() {\n      return this._ch;\n    },\n\n    _initRoutes: function() {\n      this._routeTriggers = _.result(this, 'routeTriggers') || {};\n\n      _.each(this._routeTriggers, this._addTriggerRoute, this);\n    },\n\n    _addTriggerRoute: function(routes, event){\n      routes = _.isArray(routes) ? routes : [routes];\n\n      _.each(routes, function(route) {\n        this.route(route, event, _.bind(this._ch.trigger, this._ch, event));\n      }, this);\n    },\n\n    addTriggerRoute: function(routes, event){\n      this._routeTriggers[event] = routes;\n      this._addTriggerRoute(routes, event);\n\n      return this;\n    },\n\n    route: function(route, name, callback) {\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) {\n        callback = this[name];\n      }\n\n      var wrappedCallback = _.bind(function() {\n        var args = Array.prototype.slice.call(arguments);\n        this.trigger('before:route', name, args);\n        this.trigger.apply(this, ['before:route:' + name].concat(args));\n        this._storeRouteTrigger([name].concat(args));\n        callback.apply(this, args);\n        this._clearRouteTrigger();\n      }, this);\n\n      return Backbone.Router.prototype.route.call(this, route, name, wrappedCallback);\n    },\n\n    _storeRouteTrigger: function(args){\n      this._routeArgs = this._routeArgs || [];\n      this._routeArgs.push(args);\n    },\n\n    _getCurrentRouteTrigger: function(){\n      return _.last(this._routeArgs) || [];\n    },\n\n    _clearRouteTrigger: function(){\n      this._routeArgs.pop();\n    },\n\n    _isTriggeredFromRoute: function(){\n      var currentRoute = this._getCurrentRouteTrigger();\n\n      if(arguments.length !== currentRoute.length){\n        return false;\n      }\n\n      return (arguments.length === _.union(arguments, this.currentRoute).length);\n    },\n\n    navigateFromEvent: function(event) {\n      var route = this.getDefaultRoute(event);\n\n      // if no matching route exists do nothing\n      if(!route) {\n        this.trigger.apply(this, ['noMatch'].concat(arguments));\n        return this;\n      }\n\n      if(this._isTriggeredFromRoute.apply(this, arguments)) {\n        return this;\n      }\n\n      var eventArgs = _.rest(arguments);\n\n      var translatedRoute = this.translateRoute(route, eventArgs);\n\n      // update URL without triggering the route\n      return this.navigate(translatedRoute, { trigger: false });\n    },\n\n    getDefaultRoute: function(event) {\n      var routes = this._routeTriggers[event];\n\n      return _.isArray(routes) ? routes[0] : routes;\n    },\n\n    _replaceParam: function(route, arg){\n      // https://github.com/jashkenas/backbone/blob/1.2.1/backbone.js#L1425\n      var namedParam = /(\\(\\?)?:\\w+/;\n\n      return route.replace(namedParam, arg);\n    },\n\n    translateRoute: function(route, eventArgs) {\n      return _.reduce(eventArgs, this._replaceParam, route);\n    }\n  });\n\n  var backbone_eventrouter = EventRouter;\n\n  return backbone_eventrouter;\n\n}));\n"],"sourceRoot":"/source/"}